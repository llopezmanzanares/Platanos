---
title: "Análisis de la producción de la finca"
lang: es
execute: 
  echo: false
  warning: false
  # cache: true
format: 
  html:
    theme: lux
    html-table-processing: none
    toc: true
    toc-depth: 2
    number-sections: true
    embed-resources: true
    fig-width: 10
    fig-height: 4
    page-layout: full
    grid:
      sidebar-width: 50px
      body-width: 1200px
      margin-width: 200px
knitr: 
  opts_chunk:
    echo: false
    warning: false
    message: false
---

```{r}
#| label: set-up

library(tidyverse)
library(scales)
library(ggdist)
library(patchwork)
library(here)
library(gt)
library(gtExtras)

theme_set(
  # theme_minimal()
  theme_light(base_size = 14)
)
```

```{r}
#| label: data-load

# genero los conjuntos de datos
source(file = here("code/extraccion_datos_finca.R"))

# load(here("data/processed/datos_coop_liq.RData"))
# load(here("data/processed/datos_balten.RData"))
# load(here("data/processed/istac_platanos.RData"))
```

```{r}
#| label: helpers-datasets

#--- datasets
# rango de los datos de las gráficas de la cooperativa
coop_rng <- filter(coop_ds$semanas, year(fecha) > 2020)$fecha |> range()
# rango de los datos del istac
istac_rng <- range(istac_ds$precios_sem$aa)
# anualidades completas
aamm_full <-
  tibble(
    aa = rep(year(coop_rng[1]):year(coop_rng[2]), each = 12),
    mm = rep(1:12, year(coop_rng[2]) - year(coop_rng[1]) + 1) |>
      month(label = TRUE)
  )
# consumo agua
balten_m3 <-
  balten_ds$bimensuales |>
  mutate(aa = year(fecha), mes = month(fecha, label = TRUE)) |>
  filter(aa > 2020) |>
  select(aa, mes, fecha, consumo_m3)

#--- otros
eur_label <- label_currency(
  suffix = " €", prefix = NULL,
  big.mark = ".", decimal.mark = ","
)

# mi paleta de colores
col_pal <- c(
  "blanco" = "white", "cream" = "#f4f7be", "mindaro" = "#e5f77d", "ecru" = "#deba6f",
  "wine" = "#823038", "licoire" = "#1e000e"
)
```

```{r}
#| label: helpers-tbl

gt_tema <- function(gt_tbl, t_w = 30) {
  gt_tbl |>
    tab_options(
      # table.width                 = pct(t_w),
      table.align                 = "left",
      table.border.top.color      = "white",
      heading.align               = "left",
      heading.border.bottom.color = "gray25",
      data_row.padding            = px(2)
    ) |>
    tab_style(
      style = cell_text(size = px(14)),
      locations = cells_body(columns = everything())
    )
}
```

```{r}
#| label: my-funs
#| eval: false

# para ggplot_col_mm
coop_mm <-
  select(coop_ds$mes, fecha, total_kg:racimos) |>
  mutate(aa = year(fecha), mm = month(fecha, label = TRUE), .after = fecha) |>
  pivot_longer(cols = total_kg:racimos)

# gráfica de columnas mensuales para los datos de la cooperativa
ggplot_cols_mm <- function(data_sel, aa_sel) {
  # selecciono los datos
  coop_mm |>
    filter(aa == parse_number(aa_sel), name == data_sel) |>
    # genero la gráfica
    ggplot(aes(x = mm, y = value)) +
    geom_col(fill = col_pal["ecru"]) +

    # simplifico la grafica
    theme_minimal() +
    scale_x_discrete(breaks = NULL) +
    scale_y_continuous(breaks = NULL) +
    labs(x = element_blank(), y = element_blank()) +
    coord_cartesian(xlim = c(1, 12))
}
```

::: callout-note
# Última actualización

La última actualización de los datos ha sido `r format.Date(coop_rng[2], "%A, %d de %B de %Y")`
:::

# Ingresos y Gastos

```{r}
#| label: ingresos-gastos

# TODO: calcular el rendimiento, €/Kg

# gastos de agua, anuales (año 2020 incompleto)
balten_totales_eur <-
  balten_ds$bimensuales |>
  mutate(aa = year(fecha)) |>
  summarise(.by = aa, gastos = sum(total_eur) / 2) |>
  filter(aa > 2020)

produccion_totales_eur <-
  coop_ds$mes |>
  mutate(aa = year(fecha)) |>
  summarise(.by = aa, ingresos = sum(total_eur), kilos = sum(total_kg))


left_join(produccion_totales_eur, balten_totales_eur, by = "aa") |>
  left_join(
    # otros_ingresos
    coop_ds$oo_ii |>
      mutate(aa = year(fecha)) |>
      summarise(.by = aa, otros_ingresos = sum(importe)),
    by = "aa"
  ) |>
  left_join(
    # otros_gastos
    coop_ds$oo_gg |>
      mutate(aa = year(fecha)) |>
      summarise(.by = aa, otros_gastos = sum(total)),
    by = "aa"
  ) |>
  replace_na(list(gastos = 0, otros_ingresos = 0, otros_gastos = 0)) |>
  mutate(
    aa = aa,
    ingresos = ingresos + otros_ingresos,
    gastos = gastos + otros_gastos,
    dif = ingresos - gastos,
    d_dif = dif / ingresos,
    coste = gastos / kilos,
    .keep = "none"
  ) |>
  arrange(desc(aa)) |>
  gt() |>
  gt_tema(t_w = 40) |>
  tab_options(
    #    table.width = pct(30),
    footnotes.padding = px(2)
  ) |>
  tab_header(title = "Resumen de ingresos y gastos (€)") |>
  fmt_integer(columns = !c(aa, coste), sep_mark = ".") |>
  fmt_number(columns = coste, sep_mark = ".", dec_mark = ",", decimals = 2) |>
  fmt_percent(columns = d_dif, sep_mark = ".", dec_mark = ",", decimals = 1) |>
  tab_style(style = cell_text(weight = "bold"), locations = cells_body(columns = aa)) |>
  cols_width(
    aa ~ pct(10), d_dif ~ pct(15),
    # everything() ~ px(150)
  ) |>
  cols_label(
    aa = "", d_dif = "",
    dif = "Beneficios",
    ingresos = "Ingresos",
    gastos = "Gastos",
    coste = "€ / Kg"
  ) |>
  tab_footnote(
    footnote = "Cortes, Subvenciones y Devoluciones",
    locations = cells_column_labels(columns = ingresos)
  ) |>
  tab_footnote(
    footnote = "Agua, Abonos y Otros",
    locations = cells_column_labels(columns = gastos)
  ) |>
  tab_footnote(
    footnote = "Coste de producción",
    locations = cells_column_labels(columns = coste)
  ) |>
  tab_source_note(
    source_note = "Datos de Subvenciones, Devoluciones, Abonos y Otros desde 2024"
  )
```

# Producción

## Resumen

```{r}
#| label: tabla-resumen

coop_ds$mes |>
  select(fecha_aa, total_kg:racimos) |>
  pivot_longer(
    cols = !fecha_aa, names_prefix = "total_",
    names_transform = list(name = \(x) case_when(x == "kg" ~ "Peso",
      x == "eur" ~ "Precio",
      .default = "Racimos"
    ))
  ) |>
  summarise(
    .by = c(fecha_aa, name),
    across(value,
      list(total = sum, prom = mean, media = median, estdv = sd, datos = list),
      .names = "{.fn}"
    )
  ) |>
  relocate(datos, .after = total) |>
  gt(
    rowname_col = "fecha_aa", # groupname_col = "name",
    locale = "es"
  ) |>
  gt_tema(t_w = 60) |>
  tab_header(title = "Resumen de valores mensuales") |>
  tab_row_group(label = md("**Racimos**"), rows = str_detect(name, "Racimos"), id = "racs") |>
  tab_row_group(label = md("**Pesos (Kg)**"), rows = str_detect(name, "Peso"), id = "kg") |>
  tab_row_group(label = md("**Facturado (€)**"), rows = str_detect(name, "Precio"), id = "eur") |>
  cols_hide(columns = name) |>
  # gt_theme_538() |>

  fmt_number(columns = c(total:estdv), decimals = 0) |>
  fmt_currency(
    columns = c(total:estdv), # rows = cells_row_groups(groups = "eur"),
    rows = c(2, 5, 8, 11, 14), # locale = "es",
    decimals = 0, placement = "right", incl_space = TRUE
  ) |>
  cols_label(
    total = "Acumulado", datos = "Distribución",
    prom = "Media", media = "Mediana", estdv = "Desv. Est."
  ) |>
  gt_plt_dist(
    column = datos, # type   = "histogram",
    fill_color = col_pal["mindaro"], line_color = col_pal["ecru"],
    same_limit = FALSE
  )
```

```{r}
#| label: tabla-resumen-mm
#| eval: false

left_join(
  aamm_full,
  coop_ds$mes |>
    select(fecha, mm = fecha_mm, total_kg, total_eur, racimos) |>
    mutate(aa = year(fecha), .keep = "unused"),
  join_by(aa, mm)
) |>
  mutate(mm = str_to_title(mm)) |>
  pivot_longer(cols = total_kg:racimos) |>
  pivot_wider(names_from = mm, values_from = value) |>
  # espacio para la gráfica, con las variables necesarias
  mutate(.by = c(name, aa), grafica = list(c(name, aa)), .after = name) |>
  # la tabla
  gt(
    locale = "es",
    rowname_col = "aa" # , groupname_col = "name"
  ) |>
  # gt_tema() |>
  #  gt_theme_538() |>
  tab_style(style = cell_text(size = "small"), locations = cells_body(columns = c("Ene":"Dic"))) |>
  tab_header(title = "Comparativa de valores mensuales") |>
  tab_row_group(
    label = md("**Racimos**"), rows = name == "racimos",
    id = "racs"
  ) |>
  tab_row_group(
    label = md("**Pesos (Kg)**"), rows = name == "total_kg",
    id = "kg"
  ) |>
  tab_row_group(
    label = md("**Facturado (€)**"), rows = name == "total_eur",
    id = "eurs"
  ) |>
  cols_hide(name) |>
  cols_label(grafica = "Anualidad") |>
  # formatos numéricos
  fmt_number(
    columns = c("Ene":"Dic"),
    decimals = 0
  ) |>
  # heat map
  data_color(
    columns = c("Ene":"Dic"), direction = "row",
    palette = col_pal, apply_to = "fill"
  ) |>
  # las gráficas
  text_transform(
    locations = cells_body(columns = "grafica"),
    fn = function(column) {
      map(column, ~ str_split_1(., ", ")) |>
        map(~ ggplot_cols_mm(.[1], .[2])) |>
        ggplot_image(height = px(30), aspect_ratio = 3)
    }
  )
```

<!--# Relación entre Precio y Peso -->

```{r}
#| label: eur-vs-kg
#| eval: false

eurvskg <-
  coop_ds$mes |>
  select(fecha, total_kg, total_eur) |>
  mutate(
    aa = year(fecha), mm = month(fecha, label = TRUE),
    eur_kg = round(total_eur / total_kg, 2)
  )

ggplot(eurvskg, aes(x = mm, y = eur_kg, color = as_factor(aa))) +
  geom_line(aes(group = aa), linewidth = 1) +
  ggrepel::geom_text_repel(
    data = filter(eurvskg, mm == min(mm)) |> select(aa:eur_kg),
    aes(label = aa, x = mm, y = eur_kg),
    size = 3
  ) +
  labs(
    title = "Total facturado vs Total producido",
    x = NULL, y = NULL
  ) +
  theme(
    plot.title.position = "plot", legend.position = "none"
  ) +
  scale_y_continuous(position = "right", labels = label_number(decimal.mark = ","))
```

## Acumulados anuales

```{r}
#| label: kg-acum

coop_ds$mes_acum |>
  select(starts_with(c("fecha", "total"))) |>
  ggplot(aes(x = fecha_mm, y = total_kg_acum)) +
  geom_line(aes(group = fecha_aa, color = fecha_aa)) +
  ggrepel::geom_text_repel(
    data = filter(coop_ds$mes_acum, fecha == min(fecha), .by = fecha_aa),
    aes(label = fecha_aa, color = fecha_aa, x = fecha_mm, y = total_kg_acum),
    size = 3
  ) +
  labs(
    title = "Pesos",
    x = element_blank(), y = element_blank(), color = element_blank()
  ) +
  theme(plot.title.position = "plot", legend.position = "none") +
  scale_y_continuous(
    position = "right",
    labels = label_number(big.mark = ".", decimal.mark = ",", scale_cut = cut_si("Kg"), scale = 1e3)
  )
```

```{r}
#| label: eur-acum

# tabla con los valores del último mes con datos
tbl_lastmonth <-
  filter(coop_ds$mes_acum, fecha_mm == last(fecha_mm)) |>
  select(fecha_aa, total_eur_acum) |>
  gt() |>
  tab_options(
    data_row.padding = px(3),
    column_labels.hidden = TRUE
  ) |>
  tab_style(
    style = cell_text(size = px(10)),
    locations = list(cells_title(), cells_body())
  ) |>
  fmt_currency(columns = total_eur_acum, locale = "es", placement = "right", decimals = 0)

# gráfica con la evolución
graf_mes_acum_eur <-
  coop_ds$mes_acum |>
  select(starts_with(c("fecha", "total"))) |>
  # mutate(mes = month(fecha, label = TRUE)) |>
  ggplot(aes(x = fecha_mm, y = total_eur_acum)) +
  geom_line(aes(group = fecha_aa, color = fecha_aa)) +

  # último valor del último año, comparado con los anteriores
  # geom_point(
  #   data = filter(coop_ds$mes_acum, month(fecha) == month(max(fecha))),
  #   aes(x = fecha_mm, y = total_eur_acum), color = "black", shape = 1,
  #   show.legend = FALSE
  # ) +
  # ggrepel::geom_text_repel(
  #   data = filter(coop_ds$mes_acum, month(fecha) == month(max(fecha))),
  #   aes(
  #     label = format(total_eur_acum,
  #                    big.mark=".", decimal.mark = ",", digits = 1) |>
  #       str_c("€", sep=" ")
  #   ),
  #   nudge_x = .9, size = 3,
  #   show.legend = FALSE
  # ) +

  ggrepel::geom_text_repel(
    data = filter(coop_ds$mes_acum, fecha == min(fecha), .by = fecha_aa),
    aes(label = fecha_aa, color = fecha_aa, x = fecha_mm, y = total_kg_acum),
    size = 3
  ) +
  labs(
    title = "Ingresos por producción",
    caption = "La tabla muestra los valores acumulados hasta el mes en curso",
    x = element_blank(), y = element_blank(), color = element_blank()
  ) +
  theme(plot.title.position = "plot", legend.position = "none") +
  scale_y_continuous(
    position = "right",
    labels = label_currency(
      suffix = " €", prefix = NULL,
      big.mark = ".", decimal.mark = ",",
      scale_cut = cut_short_scale()
    )
  )

graf_mes_acum_eur +
  inset_element(tbl_lastmonth, left = .008, bottom = 0.6, right = 0.15, top = 0.95)
```

## Calidad del producto

```{r}
#| label: premium

coop_ds$mes |>
  mutate(
    prc_kg = premium_kg / total_kg,
    prc_eur = premium_eur / total_eur
  ) |>
  select(fecha, starts_with("prc")) |>
  pivot_longer(
    cols = !fecha,
    names_prefix = "prc_",
    names_transform = list(name = \(x) ifelse(x == "kg", "Peso", "Precio"))
  ) |>
  ggplot(aes(x = fecha, y = value)) +
  geom_line(aes(color = name), linewidth = 1) +
  labs(
    title = "Porcentaje de categoría Premium",
    x = element_blank(), y = element_blank(), color = element_blank()
  ) +
  theme(
    plot.title.position = "plot",
    legend.position = "inside",
    legend.position.inside = c(0.1, 0.9),
    legend.text = element_text(size = 9),
    legend.background = element_blank()
  ) +
  scale_y_continuous(position = "right", labels = label_percent(decimal.mark = ","))
```

## Distribución mensual

```{r}
#| label: estacional-1

select(coop_ds$mes, fecha, total_kg, total_eur) |>
  pivot_longer(cols = !fecha) |>
  mutate(
    name = if_else(name == "total_kg", "Kg", "€"),
    name = fct(name, levels = c("Kg", "€"))
  ) |>
  ggplot(aes(x = fecha, y = value)) +
  geom_point(shape = 21, fill = "#f4f7be", color = "#823038") +
  geom_smooth(
    method = "loess", formula = y ~ x,
    color = "#823038", fill = "#f4f7be"
  ) +
  facet_wrap(~name, ncol = 1, scales = "free_y") +
  labs(
    title = "Evolución de la producción mensual",
    x = NULL, y = NULL
  ) +
  scale_y_continuous(position = "right")
```

```{r}
#| label: kg-mes
#| eval: false
## | fig-height: 3

coop_ds$mes |>
  ggplot(aes(x = fecha, y = total_kg)) +
  geom_point(shape = 21, fill = "#f4f7be", color = "#823038") +
  geom_smooth(
    method = "loess", formula = y ~ x,
    color = "#823038", fill = "#f4f7be"
  ) +
  labs(
    title = "Evolución de la producción mensual (Kg)",
    x = NULL, y = NULL
  ) +
  theme(plot.title.position = "plot") +
  scale_y_continuous(
    position = "right",
    labels = label_number(big.mark = ".", decimal.mark = ",")
  )
```

```{r}
#| label: kgrac-estacional
#| eval: false

select(coop_ds$mes, fecha_aa, fecha_mm, kg_rac) |>
  mutate(txt_mm = fct(x = str_to_title(fecha_mm))) |>
  ggplot(aes(x = txt_mm, y = kg_rac, color = fecha_aa)) +
  geom_point() +
  labs(
    title = "Estacionalidad de la producción",
    subtitle = "Kg por racimo",
    x = NULL, y = NULL, color = NULL
  ) +
  theme(
    plot.title.position = "plot"
  )
```

```{r}
#| label: eur_mes
#| eval: false
## | fig-height: 3

coop_ds$mes |>
  ggplot(aes(x = fecha, y = total_eur)) +
  geom_point(shape = 21, fill = "#f4f7be", color = "#823038") +
  geom_smooth(
    method = "loess", formula = y ~ x,
    color = "#823038", fill = "#f4f7be"
  ) +
  labs(
    title = "Evolución de la producción mensual (€)",
    x = NULL, y = NULL
  ) +
  theme(plot.title.position = "plot") +
  scale_y_continuous(position = "right", labels = eur_label)
```

```{r}
#| label: estacional-2

select(coop_ds$mes, fecha_aa, fecha_mm, kg_rac, total_eur, racimos) |>
  mutate(
    txt_mm  = fct(x = str_to_title(fecha_mm)),
    eur_rac = total_eur / racimos
  ) |>
  select(fecha_aa, txt_mm, ends_with("_rac")) |>
  pivot_longer(cols = !c(fecha_aa, txt_mm)) |>
  mutate(
    name = if_else(name == "kg_rac", "Kg por racimo", "€ por racimo"),
    name = fct(name, levels = c("Kg por racimo", "€ por racimo"))
  ) |>
  ggplot(aes(x = txt_mm, y = value, color = fecha_aa)) +
  geom_point() +
  geom_line(aes(group = fecha_aa), show.legend = FALSE) +
  facet_wrap(~name, ncol = 1, scales = "free_y") +
  labs(
    title = "Estacionalidad de la producción por racimo",
    x = NULL, y = NULL, color = NULL
  ) +
  theme(
    plot.title.position = "plot"
  )
```

<!--# Distribución semanal del peso -->

```{r}
#| label: kg-anuales
#| eval: false

coop_ds$semanas |>
  filter(tipo == "total_kg") |>
  ggplot(aes(x = valor)) +
  geom_boxplot(width = 0.1, fill = "#823038") +
  geom_dots(
    dotsize = 0.1, height = 0.55, fill = "#823038",
    side = "bottom", position = position_nudge(y = -0.075)
  ) +
  stat_slab(
    fill = "#823038",
    position = position_nudge(y = 0.075), height = 0.75
  ) +
  labs(
    title = "Distribución de los pesos semanales (total)",
    x = "Kg", y = element_blank()
  ) +
  theme(
    plot.title.position = "plot",
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()
  ) +
  scale_x_continuous(labels = label_number(big.mark = ".", decimal.mark = ","))

coop_ds$semanas |>
  filter(tipo == "total_kg") |>
  filter(fecha_aa != "2020") |>
  ggplot(aes(y = valor, fill = fecha_aa)) +
  geom_boxplot(width = 0.1, outliers = FALSE) +
  geom_dots(
    dotsize = 0.1, height = 0.55,
    side = "bottom", position = position_nudge(x = -0.075)
  ) +
  stat_slab(
    position = position_nudge(x = 0.075), height = 0.75
  ) +
  facet_wrap(~fecha_aa, nrow = 1) +
  labs(
    # title = "Distribución de los pesos semanales (Kg)",
    x = element_blank(), y = "Kg"
  ) +
  theme(
    plot.title.position = "plot",
    legend.position = "none",
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  scale_y_continuous(
    position = "right",
    labels = label_number(big.mark = ".", decimal.mark = ",")
  )
```

# Gastos

## Consumo de agua

```{r}
#| label: agua-consumo

# mes actual
mes_actual <- filter(balten_m3, mes == last(balten_m3$mes))

balten_m3 |> 
  ggplot(aes(x = fecha, y = consumo_m3)) +
  geom_line(color = "steelblue") +
  geom_point(color = "gray50") +
  
  geom_point(
    data = mes_actual,
    aes(x = fecha, y = consumo_m3),
    color = "steelblue",
    size = 3
  ) +
  
  labs(
    title = "Consumo de agua (m<sup>3</sup>)",
    subtitle = "Remarcada la evolución del último bimestre",
    x = NULL, y = NULL
  ) +
  theme(
    panel.grid.major.x = element_line(colour = "gray50"),
    plot.title.position = "plot",
    plot.title = ggtext::element_markdown()
  )

```

```{r}
#| label: agua-bimensual

balten_m3 |>
  ggplot(aes(x = fecha, y = consumo_m3)) +
  geom_line(data = balten_m3 |> rename(m = mes), aes(group = m), color = "grey85", linewidth = 1) +
  geom_line(color = "#7777DD", linewidth = 1) +
  facet_wrap(vars(mes)) +
  labs(
    title = "Distribución del consumo de agua (m<sup>3</sup> x bimestre)",
    x = NULL, y = NULL, color = NULL
  ) +
  theme(
    plot.title.position = "plot", 
    plot.title = ggtext::element_markdown(),
    legend.position = "bottom"
    ) +
  scale_y_continuous(labels = label_number(big.mark = ".", decimal.mark = ","))
```

```{r}
#| label: agua-anual

balten_m3 |>
  # mutate(mes = as_factor(month(fecha))) |>
  # mutate(mes = month(fecha, label = TRUE)) |>
  ggplot(aes(as_factor(aa))) +
  geom_bar(aes(weight = consumo_m3, fill = lvls_reorder(mes, 12:1))) +
  labs(
    title = "Acumulado anual del consumo de agua (m<sup>3</sup>)",
    subtitle = "Contribución de cada bimestre",
    x = NULL, y = NULL, fill = "Bimestre"
  ) +
  theme(
    plot.title.position = "plot",
    plot.title = ggtext::element_markdown(),
    legend.position = "bottom"
  ) +
  scale_y_continuous(position = "right", labels = label_number(big.mark = "."))
```
